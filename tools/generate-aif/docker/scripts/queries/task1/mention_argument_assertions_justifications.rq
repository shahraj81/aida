PREFIX ldcOnt: <https://raw.githubusercontent.com/NextCenturyCorporation/AIDA-Interchange-Format/master/java/src/main/resources/com/ncc/aif/ontologies/LDCOntologyM36#>
PREFIX rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX aida:  <https://raw.githubusercontent.com/NextCenturyCorporation/AIDA-Interchange-Format/master/java/src/main/resources/com/ncc/aif/ontologies/InterchangeOntology#>
PREFIX cfn:   <https://verdi.nextcentury.com/custom-function/>
PREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>
PREFIX ldc: <https://raw.githubusercontent.com/NextCenturyCorporation/AIDA-Interchange-Format/master/java/src/main/resources/com/ncc/aif/ontologies/LdcAnnotations#>

SELECT
	?subject_mention_id
	?predicate
	?object_mention_id
	(GROUP_CONCAT(DISTINCT ?justification_span ; SEPARATOR = ";") AS ?predicate_justification)
WHERE {
    
    SELECT DISTINCT
           ?subject_mention_id
           ?predicate
           ?object_mention_id
           ?justification_span
    WHERE {
        ?statement1           a                             aida:ClusterMembership .
        ?statement1           aida:cluster                  ?subject_cluster .
        ?statement1           aida:clusterMember            ?subject .    

        ?statement2           a                             aida:ClusterMembership .
        ?statement2           aida:cluster                  ?object_cluster .
        ?statement2           aida:clusterMember            ?object .    

        ?statement3           rdf:subject                   ?subject .
        ?statement3           rdf:predicate                 ?predicate .
        ?statement3           rdf:object                    ?object .

        ?statement3           aida:justifiedBy              ?compoundedge_just .
        ?compoundedge_just    aida:containedJustification   ?edge_justification .
        ?edge_justification   aida:sourceDocument           ?docid .
        ?edge_justification   aida:source                   ?doceid .

        OPTIONAL {
               ?edge_justification a                           aida:TextJustification .
               ?edge_justification aida:startOffset            ?ejso .
               ?edge_justification aida:endOffsetInclusive     ?ejeo
        }
        OPTIONAL {
               ?edge_justification a                           aida:ImageJustification .
               ?edge_justification aida:boundingBox            ?ejbb1  .
               ?ejbb1              aida:boundingBoxUpperLeftX  ?ejulx1 .
               ?ejbb1              aida:boundingBoxUpperLeftY  ?ejuly1 .
               ?ejbb1              aida:boundingBoxLowerRightX ?ejlrx1 .
               ?ejbb1              aida:boundingBoxLowerRightY ?ejlry1
        }
        OPTIONAL {
               ?edge_justification a                           aida:KeyFrameVideoJustification .
               ?edge_justification aida:keyFrame               ?ejkfid .
               ?edge_justification aida:boundingBox            ?ejbb2  .
               ?ejbb2              aida:boundingBoxUpperLeftX  ?ejulx2 .
               ?ejbb2              aida:boundingBoxUpperLeftY  ?ejuly2 .
               ?ejbb2              aida:boundingBoxLowerRightX ?ejlrx2 .
               ?ejbb2              aida:boundingBoxLowerRightY ?ejlry2
        }
        OPTIONAL {
               ?edge_justification a                           aida:ShotVideoJustification .
               ?edge_justification aida:shot                   ?ejsid
        }
        OPTIONAL {
               ?edge_justification a                           aida:AudioJustification .
               ?edge_justification aida:startTimestamp         ?ejst1 .
               ?edge_justification aida:endTimestamp           ?ejet1
        }
        OPTIONAL {
               ?edge_justification a                           aida:VideoJustification .
               ?edge_justification aida:startTimestamp         ?ejst2 .
               ?edge_justification aida:endTimestamp           ?ejet2
        }

        BIND( IF( BOUND(?ejsid), ?ejsid, "__NULL__") AS ?_ejsid) .
        BIND( IF( BOUND(?ejkfid), ?ejkfid, "__NULL__") AS ?_ejkfid) .
        BIND( IF( BOUND(?ejso), ?ejso, "__NULL__") AS ?_ejso) .
        BIND( IF( BOUND(?ejeo), ?ejeo, "__NULL__") AS ?_ejeo) .
        BIND( COALESCE(?ejst1, ?ejst2, "__NULL__") AS ?_ejst) .
        BIND( COALESCE(?ejet1, ?ejet2, "__NULL__") AS ?_ejet) .
        BIND( COALESCE(?ejulx1, ?ejulx2, "__NULL__") AS ?_ejulx) .
        BIND( COALESCE(?ejuly1, ?ejuly2, "__NULL__") AS ?_ejuly) .
        BIND( COALESCE(?ejlrx1, ?ejlrx2, "__NULL__") AS ?_ejlrx) .
        BIND( COALESCE(?ejlry1, ?ejlry2, "__NULL__") AS ?_ejlry) .

        BIND( cfn:getSpan(str(?docid), str(?doceid), str(?_ejsid), str(?_ejkfid), str(?_ejso), str(?_ejeo), str(?_ejulx), str(?_ejuly), str(?_ejlrx), str(?_ejlry), str(?_ejst), str(?_ejet) ) AS ?justification_span ) .
        BIND(strafter(str(?subject),str(ldc:)) as ?subject_mention_id)
        BIND(strafter(str(?object),str(ldc:)) as ?object_mention_id)
    }
    ORDER BY ?subject_mention_id ?predicate ?object_mention_id ?justification_span
}
GROUP BY ?subject_mention_id ?predicate ?object_mention_id
